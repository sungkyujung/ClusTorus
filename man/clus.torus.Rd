% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clus.torus.R, R/methods.R
\name{clus.torus}
\alias{clus.torus}
\alias{plot.clus.torus}
\title{Clustering on the torus by conformal prediction}
\usage{
clus.torus(
  data,
  split.id = NULL,
  model = c("kmeans", "mixture"),
  mixturefitmethod = c("axis-aligned", "circular", "general"),
  kmeansfitmethod = c("general", "homogeneous-circular", "heterogeneous-circular",
    "ellipsoids"),
  J = NULL,
  level = NULL,
  option = NULL,
  verbose = TRUE,
  ...
)

\method{plot}{clus.torus}(
  x,
  panel = 1,
  assignment = "outlier",
  data = NULL,
  ellipse = TRUE,
  type = NULL,
  overlay = FALSE,
  out = FALSE,
  ...
)
}
\arguments{
\item{data}{n x d matrix of toroidal data on \eqn{[0, 2\pi)^d}
or \eqn{[-\pi, \pi)^d}. Default is \code{NULL}.}

\item{split.id}{a n-dimensional vector consisting of values 1 (estimation)
and 2(evaluation)}

\item{model}{A string. One of "mixture" and "kmeans" which
determines the model or estimation methods. If "mixture", the model is based
on the von Mises mixture, fitted
with an EM algorithm. It supports the von Mises mixture and its variants
based conformity scores. If "kmeans", the model is also based on the von
Mises mixture, but the parameter estimation is implemented with the
elliptical k-means algorithm illustrated in Appendix. It supports the
log-max-mixture based conformity score only. If the
dimension of data space is greater than 2, only "kmeans" is supported.
Default is \code{model = "kmeans"}.}

\item{mixturefitmethod}{A string. One of "circular", "axis-aligned", and
"general" which determines the constraint of the EM fitting. Default is
"axis-aligned". This argument only works for \code{model = "mixture"}.}

\item{kmeansfitmethod}{A string. One of "general", ellipsoids",
"heterogeneous-circular" or "homogeneous-circular". If "general", the
elliptical k-means algorithm with no constraint is used. If "ellipsoids",
only the one iteration of the algorithm is used. If"heterogeneous-circular",
the same as above, but with the constraint that ellipsoids must be spheres.
If "homogeneous-circular", the same as above but the radii of the spheres are
identical. Default is "general". This argument only works for \code{model = "kmeans"}.}

\item{J}{the number of components for mixture model fitting. If \code{J} is a vector,
 then \code{hyperparam.torus} is used to choose optimal \code{J}. If
\code{J == NULL}, then \code{J = 4:30} is used.}

\item{level}{a scalar in \eqn{[0,1]}. The level of the conformal prediction set
used for clustering. If \code{level == NULL}, then \code{hyperparam.alpha} is
used to choose optimal \code{level}}

\item{option}{A string. One of "elbow", "risk", "AIC", or "BIC", which determines the
criterion for the model selection. "risk" is based on the negative log-likelihood, "AIC"
for the Akaike Information Criterion, and "BIC" for the Bayesian Information Criterion.
"elbow" is based on minimizing the criterion used in Jung et. al.(2021).
This argument is only used if \code{J} is a vector or \code{NULL}.}

\item{verbose}{boolean index, which indicates whether display
additional details as to what the algorithm is doing or
how many loops are done. Default is \code{TRUE}.}

\item{...}{Further arguments that will be passed to \code{icp.torus} and
\code{hyperparam.torus}}

\item{x}{\code{clus.torus} object}

\item{panel}{One of 1 or 2 which determines the type of plot. If \code{panel = 1},
\code{x$cluster.obj} will be plotted, if \code{panel = 2}, \code{x$icp.torus} will be plotted.
If \code{panel = 3}, \code{x$hyperparam.select} will be plotted. Default is \code{panel = 1}.}

\item{assignment}{A string. One of "outlier", "log.density", "posterior", "mahalanobis". Default is "outlier".}

\item{ellipse}{A boolean index which determines whether plotting ellipse-intersections. Default is \code{TRUE}. Only available
for \code{panel = 2}.}

\item{type}{A string. One of "mix", "max" or "e". This argument is only available if \code{icp.torus}
object is fitted with \code{model = "mixture"}. Default is \code{NULL}. If \code{type != NULL}, argument
\code{ellipse} automatically becomes \code{FALSE}. If "mix", it plots based on von Mises mixture.
If "max", it plots based on von Mises max-mixture. If "e", it plots based on ellipse-approximation.}

\item{overlay}{A boolean index which determines whether plotting ellipse-intersections on clustering plots. Default is \code{FALSE}.
Only available for \code{panel = 1}.}

\item{out}{An option for returning the ggplot object. Default is \code{FALSE}.}
}
\value{
\code{clus.torus} returns a \code{clus.torus} object, which consists of following 3 different S3 objects;
\describe{
  \item{\code{cluster.obj}}{\code{cluster.obj} object; clustering assigment results for
    several methods. For detail, see \code{\link[ClusTorus]{cluster.assign.torus}}.}
  \item{\code{icp.torus}}{\code{icp.torus} object; containing model parameters and
    conformity scores. For detail, see \code{\link[ClusTorus]{icp.torus}}.}
  \item{\code{hyperparam.J}}{(optional)\code{hyperparam.J} object; contains informations for the
    optimally chosen model(number of components J) based on prespecified criterion. For detail, see \code{\link[ClusTorus]{hyperparam.J}}.}
  \item{\code{hyperparam.alpha}}{(optional)\code{hyperparam.alpha} object; contains informations for the
    optimally chosen level(alpha) based on the longest interval choosing method. For detail, see \code{\link[ClusTorus]{hyperparam.alpha}}.}
  \item{\code{hyperparam.torus}}{(optional)\code{hyperparam.torus} object; contains informations for the
    optimally chosen model(number of components J) and level(alpha). For detail, see \code{\link[ClusTorus]{hyperparam.torus}}.}
}
}
\description{
\code{clus.torus} returns clustering results of data on the torus based on
  inductive conformal prediction set
}
\details{
\code{clus.torus} is a user-friendly all-in-one function which implements following
precedures automatically: 1. compute conformity scores for given model and fitting method,
2. choose optimal model and level based on prespecified criterion, and
3. make clusters based on the chosen model and level. Procedure 1-3 can be
independently done with \code{icp.torus}, \code{hyperparam.torus},
\code{hyperparam.J}, \code{hyperparam.alpha} and \code{cluster.assign.torus}.
If you want to see more detail for each procedure, please see
\code{\link[ClusTorus]{icp.torus}}, \code{\link[ClusTorus]{hyperparam.J}}, \code{\link[ClusTorus]{hyperparam.alpha}}
\code{\link[ClusTorus]{hyperparam.torus}}, \code{\link[ClusTorus]{cluster.assign.torus}}.
}
\examples{
\donttest{
data <- toydata2[, 1:2]
n <- nrow(data)
clus.torus(data = data, model = "kmeans", kmeansfitmethod = "general", J = 5:30, option = "risk")
}
}
\references{
S. Jung, K. Park, and B. Kim (2021),
  "Clustering on the torus by conformal prediction" to appear in Annals of Applied Statistics.
}
\seealso{
\code{\link[ClusTorus]{icp.torus}}, \code{\link[ClusTorus]{hyperparam.torus}},
  \code{\link[ClusTorus]{hyperparam.J}}, \code{\link[ClusTorus]{hyperparam.alpha}}
  \code{\link[ClusTorus]{cluster.assign.torus}}
}
